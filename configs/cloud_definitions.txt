[USER-DEFINED]
# Variable $IP_AUTO attempts to auto-discover IP address
MANAGER_IP = $IP_AUTO
MAIN_UPDATE_FREQUENCY = 5
MAIN_UPDATE_ATTEMPTS = 36
MAIN_NOTIFICATION = $False
MAIN_ATTEMPTS = 2
MAIN_TIMEOUT = 240
# Variable $USER auto-selects current username
MAIN_USERNAME = $USER_AUTO
# Name of the ssh key pair (two files are supposed to exist inside the 
# "credentials" directory, bogus_id_rsa and bogus_id_rsa.pub
MAIN_SSH_KEY_NAME = bogus_id_rsa
# This is the username created inside the VMs
MAIN_LOGIN = klabuser
# Variable $PATH_TO_TOOL attempts to auto-selects the appropriate path 
MAIN_BASE_DIR = $PATH_TO_TOOL

# Which cloud to pick first when the tool first starts
STARTUP_CLOUD = TESTCLOUD

# List the clouds you want to define
CLOUDOPTION_TESTCLOUD = cldattach sim, vmcattach all
CLOUDOPTION_MYSMARTCLOUD = cldattach scp, vmcattach all
CLOUDOPTION_MYOPENSTACK = cldattach osk, vmcattach all
CLOUDOPTION_MYAMAZON = cldattach ec2, vmcattach all
CLOUDOPTION_MYTAC = cldattach tac, vmcattach all

# Now, Specify the individual parameters for each cloud

# Simulated Cloud (SIM) requires the following parameters
[USER-DEFINED : CLOUDOPTION_TESTCLOUD]
SIM_INITIAL_VMCS = test_host1:sut,test_host2:sut,test_host3:sut,test_host4:sut,test_host5:sut,test_host6:sut,test_host7:lg,test_host8:lg,test_host9:lg,test_host10:lg

# OpenStack (OSK) requires the following parameters (replace everything between <>)
[USER-DEFINED : CLOUDOPTION_MYOPENSTACK]
OSK_ACCESS = http://<address>:5000/v2.0/
OSK_CREDENTIALS =  <user>-<password>-<tenant>
OSK_KEY_NAME = <key name>         # Create the key on OpenStack first
OSK_SECURITY_GROUPS = default	  # Make sure that this group exists first
OSK_INITIAL_VMCS = RegionOne:sut  # Change "RegionOne" accordingly

# Smart Cloud Provisioning (SCP) requires the following parameters
[USER-DEFINED : CLOUDOPTION_MYSMARTCLOUD]
SCP_IAAS_ACCESS_ID = <user>
SCP_IAAS_PRIVATE_KEY = /iaas/cli/adminkey/admin.key
SCP_IAAS_SERVICE_PUBLIC_KEY = /iaas/cli/adminkey/vm_service.key
SCP_IAAS_PROXY_PORT = 9090
SCP_IAAS_WEBSERVICE_PORT = 5678/query/
SCP_IAAS_CLI_LOCATION = <hostname> # address of the webservice VM for SCP
SCP_INITIAL_VMCS = kvm_rack1:sut # Change "kvm_rack1" accordingly

# Elastic Compute Cloud (EC2) requires the following paramaters 
[USER-DEFINED : CLOUDOPTION_MYAMAZON]
EC2_ACCESS = ABCDEFGHIJKLMNOPQRST # This is the AWS access key id
EC2_SECURITY_GROUP = cloudbench   # Make sure that this group exists first 
EC2_CREDENTIALS = ABCDEFGHIJKLMNOPQRSTUVXYWZ01234567890-+* # This is the AWS secret access key 
EC2_KEY_NAME = cloudbench         # Make sure that this key exists first 
EC2_INITIAL_VMCS = us-east-1:sut  # Change "us-east-1" accordingly

# Thin Agile Cloud (TAC) requires the following paramaters 
[USER-DEFINED : CLOUDOPTION_MYTAC]
CLOUDOPTION_MYTAC_TAC_WEBSERVICE = <address>
CLOUDOPTION_MYTAC_TAC_WEBSERVICE_PORT = 6060
CLOUDOPTION_MYTAC_TAC_INITIAL_VMCS = RegionOne:sut  # Change "RegionOne" accordingly

[MON_DEFAULTS : CLOUDOPTION_TESTCLOUD ]
COLLECT_FROM_HOST = $False  # Change to $True if using any cloud other than EC2 or SIM
COLLECT_FROM_GUEST = $False # Change to $True if using any cloud other than SIM

[MON_DEFAULTS : CLOUDOPTION_MYOPENSTACK ]
COLLECT_FROM_HOST = $False  # Change to $True if using any cloud other than EC2 or SIM
COLLECT_FROM_GUEST = $False # Change to $True if using any cloud other than SIM

[MON_DEFAULTS : CLOUDOPTION_MYSMARTCLOUD ]
COLLECT_FROM_HOST = $False  # Change to $True if using any cloud other than EC2 or SIM
COLLECT_FROM_GUEST = $False # Change to $True if using any cloud other than SIM

[MON_DEFAULTS : CLOUDOPTION_MYAMAZON ]
COLLECT_FROM_HOST = $False  # Change to $True if using any cloud other than EC2 or SIM
COLLECT_FROM_GUEST = $False # Change to $True if using any cloud other than SIM

[MON_DEFAULTS : CLOUDOPTION_MYTAC ]
COLLECT_FROM_HOST = $False  # Change to $True if using any cloud other than EC2 or SIM
COLLECT_FROM_GUEST = $False # Change to $True if using any cloud other than SIM

[API_DEFAULTS]
PORT = 7070

[GUI_DEFAULTS]
PORT = 8080
